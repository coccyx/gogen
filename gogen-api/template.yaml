AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Resources:
  GoGenApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: v1
      OpenApiVersion: '2.0'
      Auth:
        DefaultAuthorizer: NONE
      GatewayResponses:
        DEFAULT_4XX:
          ResponseParameters:
            Headers:
              Access-Control-Allow-Origin: !If 
                - IsProduction
                - "'https://gogen.io'"
                - "'https://staging.gogen.io'"
              Access-Control-Allow-Methods: "'GET,POST,OPTIONS'"
              Access-Control-Allow-Headers: "'Content-Type,Authorization,X-Requested-With'"
              Access-Control-Allow-Credentials: "'true'"
        DEFAULT_5XX:
          ResponseParameters:
            Headers:
              Access-Control-Allow-Origin: !If 
                - IsProduction
                - "'https://gogen.io'"
                - "'https://staging.gogen.io'"
              Access-Control-Allow-Methods: "'GET,POST,OPTIONS'"
              Access-Control-Allow-Headers: "'Content-Type,Authorization,X-Requested-With'"
              Access-Control-Allow-Credentials: "'true'"
      Cors:
        AllowMethods: "'GET,POST,OPTIONS'"
        AllowHeaders: "'Content-Type,Authorization,X-Requested-With'"
        AllowOrigin: !If 
          - IsProduction
          - "'https://gogen.io'"
          - "'https://staging.gogen.io'"
        AllowCredentials: true
        MaxAge: 600
      MethodSettings:
        - ResourcePath: '/*'
          HttpMethod: '*'
          CachingEnabled: false
          ThrottlingBurstLimit: 5000
          ThrottlingRateLimit: 10000
      Domain:
        DomainName: !If 
          - IsProduction
          - api.gogen.io
          - staging-api.gogen.io
        CertificateArn: !Ref CertificateArn
        EndpointConfiguration: REGIONAL
        BasePath: ''

  GetFunction:
    Type: AWS::Serverless::Function
    Metadata:
      Dockerfile: Dockerfile
      DockerContext: .
      DockerTag: python3.13-v1
    Properties:
      CodeUri: ./api
      Handler: get.lambda_handler
      Runtime: python3.13
      Timeout: 10
      Role: !Ref LambdaRoleArn
      Environment:
        Variables:
          ENVIRONMENT: !Ref Environment
      Events:
        GetGogen:
          Type: Api
          Properties:
            RestApiId: !Ref GoGenApi
            Path: /v1/get/{proxy+}
            Method: GET
        GetGogenOptions:
          Type: Api
          Properties:
            RestApiId: !Ref GoGenApi
            Path: /v1/get/{proxy+}
            Method: OPTIONS

  ListFunction:
    Type: AWS::Serverless::Function
    Metadata:
      Dockerfile: Dockerfile
      DockerContext: .
      DockerTag: python3.13-v1
    Properties:
      CodeUri: ./api
      Handler: list.lambda_handler
      Runtime: python3.13
      Timeout: 10
      Role: !Ref LambdaRoleArn
      Environment:
        Variables:
          ENVIRONMENT: !Ref Environment
      Events:
        ListGogens:
          Type: Api
          Properties:
            RestApiId: !Ref GoGenApi
            Path: /v1/list
            Method: GET
        ListGogensOptions:
          Type: Api
          Properties:
            RestApiId: !Ref GoGenApi
            Path: /v1/list
            Method: OPTIONS

  SearchFunction:
    Type: AWS::Serverless::Function
    Metadata:
      Dockerfile: Dockerfile
      DockerContext: .
      DockerTag: python3.13-v1
    Properties:
      CodeUri: ./api
      Handler: search.lambda_handler
      Runtime: python3.13
      Timeout: 10
      Role: !Ref LambdaRoleArn
      Environment:
        Variables:
          ENVIRONMENT: !Ref Environment
      Events:
        SearchGogens:
          Type: Api
          Properties:
            RestApiId: !Ref GoGenApi
            Path: /v1/search
            Method: GET
        SearchGogensOptions:
          Type: Api
          Properties:
            RestApiId: !Ref GoGenApi
            Path: /v1/search
            Method: OPTIONS

  UpsertFunction:
    Type: AWS::Serverless::Function
    Metadata:
      Dockerfile: Dockerfile
      DockerContext: .
      DockerTag: python3.13-v1
    Properties:
      CodeUri: ./api
      Handler: upsert.lambda_handler
      Runtime: python3.13
      Timeout: 10
      Role: !Ref LambdaRoleArn
      Environment:
        Variables:
          ENVIRONMENT: !Ref Environment
      Events:
        UpsertGogen:
          Type: Api
          Properties:
            RestApiId: !Ref GoGenApi
            Path: /v1/upsert
            Method: POST
        UpsertGogenOptions:
          Type: Api
          Properties:
            RestApiId: !Ref GoGenApi
            Path: /v1/upsert
            Method: OPTIONS

  DynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub ${AWS::StackName}-gogen
      AttributeDefinitions:
        - AttributeName: gogen
          AttributeType: S
      KeySchema:
        - AttributeName: gogen
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

  DynamoDBStagingTable:
    Type: AWS::DynamoDB::Table
    Condition: IsStagingEnvironment
    Properties:
      TableName: gogen-staging
      AttributeDefinitions:
        - AttributeName: gogen
          AttributeType: S
      KeySchema:
        - AttributeName: gogen
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

Conditions:
  IsStagingEnvironment: !Equals 
    - !Ref Environment
    - staging
  IsProduction: !Equals
    - !Ref Environment
    - prod

Parameters:
  Environment:
    Type: String
    Default: prod
    AllowedValues:
      - staging
      - prod
    Description: The environment type
  
  CertificateArn:
    Type: String
    Description: ARN of the ACM certificate for *.gogen.io

  LambdaRoleArn:
    Type: String
    Description: ARN of the IAM role for Lambda functions

Outputs:
  ApiURL:
    Description: API Gateway endpoint URL
    Value: !If
      - IsProduction
      - https://api.gogen.io/
      - https://staging-api.gogen.io/ 