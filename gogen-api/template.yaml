AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Resources:
  ApiGatewayLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 14

  ApiGatewayLoggingRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: ApiGatewayCloudWatchLogsPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !GetAtt ApiGatewayLogGroup.Arn

  GoGenApi:
    Type: AWS::Serverless::Api
    DependsOn: ApiGatewayLogGroup
    Properties:
      StageName: v1
      BinaryMediaTypes:
        - 'application/octet-stream'
        - 'application/x-msdownload'
        - 'application/wasm'
      AccessLogSetting:
        DestinationArn: !GetAtt ApiGatewayLogGroup.Arn
        Format: >-
          {
          "requestId": "$context.requestId",
          "ip": "$context.identity.sourceIp",
          "caller": "$context.identity.caller",
          "user": "$context.identity.user",
          "requestTime": "$context.requestTime",
          "httpMethod": "$context.httpMethod",
          "resourcePath": "$context.resourcePath",
          "status": "$context.status",
          "protocol": "$context.protocol",
          "responseLength": "$context.responseLength"
          }
      MethodSettings:
        - ResourcePath: '/*'
          HttpMethod: '*'
          LoggingLevel: INFO
          DataTraceEnabled: true
          ThrottlingBurstLimit: 5000
          ThrottlingRateLimit: 10000
      DefinitionBody:
        openapi: 3.0.1
        info:
          title: GoGen API
          version: '1.0'
        x-amazon-apigateway-cors:
          allowOrigins:
            - !If [IsProduction, "'https://gogen.io'", "'https://staging.gogen.io'"]
          allowMethods:
            - GET
            - POST
            - OPTIONS
          allowHeaders:
            - Content-Type
            - Authorization
            - X-Requested-With
          allowCredentials: true
          maxAge: 600
        paths:
          /linux/gogen:
            get:
              summary: Redirect to Linux binary download
              responses:
                '302':
                  description: Redirect to S3
                  headers:
                    Location:
                      schema:
                        type: string
              x-amazon-apigateway-integration:
                type: mock
                requestTemplates:
                  application/json: '{"statusCode": 200}'
                responses:
                  default:
                    statusCode: '302'
                    responseParameters:
                      method.response.header.Location: !Join [
                        '',
                        [
                          "'",
                          !If [
                            IsProduction,
                            'https://s3.us-east-1.amazonaws.com/gogen-artifacts-prod/linux/gogen',
                            'https://s3.us-east-1.amazonaws.com/gogen-artifacts-staging/linux/gogen'
                          ],
                          "'"
                        ]
                      ]
          /windows/gogen.exe:
            get:
              summary: Redirect to Windows binary download
              responses:
                '302':
                  description: Redirect to S3
                  headers:
                    Location: { schema: { type: string } }
              x-amazon-apigateway-integration:
                type: mock
                requestTemplates:
                  application/json: '{"statusCode": 200}'
                responses:
                  default:
                    statusCode: '302'
                    responseParameters:
                      method.response.header.Location: !Join [
                        '',
                        [
                          "'",
                          !If [
                            IsProduction,
                            'https://s3.us-east-1.amazonaws.com/gogen-artifacts-prod/windows/gogen.exe',
                            'https://s3.us-east-1.amazonaws.com/gogen-artifacts-staging/windows/gogen.exe'
                          ],
                          "'"
                        ]
                      ]
          /osx/gogen:
            get:
              summary: Redirect to macOS binary download
              responses:
                '302':
                  description: Redirect to S3
                  headers:
                    Location: { schema: { type: string } }
              x-amazon-apigateway-integration:
                type: mock
                requestTemplates:
                  application/json: '{"statusCode": 200}'
                responses:
                  default:
                    statusCode: '302'
                    responseParameters:
                      method.response.header.Location: !Join [
                        '',
                        [
                          "'",
                          !If [
                            IsProduction,
                            'https://s3.us-east-1.amazonaws.com/gogen-artifacts-prod/osx/gogen',
                            'https://s3.us-east-1.amazonaws.com/gogen-artifacts-staging/osx/gogen'
                          ],
                          "'"
                        ]
                      ]
          /wasm/gogen.wasm:
            get:
              summary: Redirect to WASM module download
              responses:
                '302':
                  description: Redirect to S3
                  headers:
                    Location: { schema: { type: string } }
              x-amazon-apigateway-integration:
                type: mock
                requestTemplates:
                  application/json: '{"statusCode": 200}'
                responses:
                  default:
                    statusCode: '302'
                    responseParameters:
                      method.response.header.Location: !Join [
                        '',
                        [
                          "'",
                          !If [
                            IsProduction,
                            'https://s3.us-east-1.amazonaws.com/gogen-artifacts-prod/wasm/gogen.wasm',
                            'https://s3.us-east-1.amazonaws.com/gogen-artifacts-staging/wasm/gogen.wasm'
                          ],
                          "'"
                        ]
                      ]
          /v1/get/{proxy+}:
            get:
              responses: {}
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetFunction.Arn}/invocations"
          /v1/list:
            get:
              responses: {}
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ListFunction.Arn}/invocations"
          /v1/search:
            get:
              responses: {}
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${SearchFunction.Arn}/invocations"
          /v1/upsert:
            post:
              responses: {}
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${UpsertFunction.Arn}/invocations"
      Domain:
        DomainName: !If 
          - IsProduction
          - api.gogen.io
          - staging-api.gogen.io
        CertificateArn: !Ref CertificateArn
        EndpointConfiguration: REGIONAL
        BasePath: ''

  GetFunction:
    Type: AWS::Serverless::Function
    Metadata:
      Dockerfile: Dockerfile
      DockerContext: .
      DockerTag: python3.13-v1
    Properties:
      CodeUri: ./api
      Handler: get.lambda_handler
      Runtime: python3.13
      Timeout: 10
      Role: !Ref LambdaRoleArn
      Environment:
        Variables:
          ENVIRONMENT: !Ref Environment
          DYNAMODB_TABLE_NAME: !If [IsProduction, !Ref ProdTableName, !Ref StagingTableName]

  ListFunction:
    Type: AWS::Serverless::Function
    Metadata:
      Dockerfile: Dockerfile
      DockerContext: .
      DockerTag: python3.13-v1
    Properties:
      CodeUri: ./api
      Handler: list.lambda_handler
      Runtime: python3.13
      Timeout: 10
      Role: !Ref LambdaRoleArn
      Environment:
        Variables:
          ENVIRONMENT: !Ref Environment
          DYNAMODB_TABLE_NAME: !If [IsProduction, !Ref ProdTableName, !Ref StagingTableName]

  SearchFunction:
    Type: AWS::Serverless::Function
    Metadata:
      Dockerfile: Dockerfile
      DockerContext: .
      DockerTag: python3.13-v1
    Properties:
      CodeUri: ./api
      Handler: search.lambda_handler
      Runtime: python3.13
      Timeout: 10
      Role: !Ref LambdaRoleArn
      Environment:
        Variables:
          ENVIRONMENT: !Ref Environment
          DYNAMODB_TABLE_NAME: !If [IsProduction, !Ref ProdTableName, !Ref StagingTableName]

  UpsertFunction:
    Type: AWS::Serverless::Function
    Metadata:
      Dockerfile: Dockerfile
      DockerContext: .
      DockerTag: python3.13-v1
    Properties:
      CodeUri: ./api
      Handler: upsert.lambda_handler
      Runtime: python3.13
      Timeout: 10
      Role: !Ref LambdaRoleArn
      Environment:
        Variables:
          ENVIRONMENT: !Ref Environment
          DYNAMODB_TABLE_NAME: !If [IsProduction, !Ref ProdTableName, !Ref StagingTableName]

  ListFunctionApiGatewayInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref ListFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${GoGenApi}/*/GET/v1/list

  SearchFunctionApiGatewayInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref SearchFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${GoGenApi}/*/GET/v1/search

  UpsertFunctionApiGatewayInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref UpsertFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${GoGenApi}/*/POST/v1/upsert

  GetFunctionApiGatewayInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref GetFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${GoGenApi}/*/GET/v1/get/*

Conditions:
  IsStagingEnvironment: !Equals 
    - !Ref Environment
    - staging
  IsProduction: !Equals
    - !Ref Environment
    - prod

Parameters:
  Environment:
    Type: String
    Default: prod
    AllowedValues:
      - staging
      - prod
    Description: The environment type
  
  CertificateArn:
    Type: String
    Description: ARN of the ACM certificate for *.gogen.io

  LambdaRoleArn:
    Type: String
    Description: ARN of the IAM role for Lambda functions

  ProdTableName:
    Type: String
    Default: gogen
    Description: Name of the existing DynamoDB table for Production

  StagingTableName:
    Type: String
    Default: gogen-staging
    Description: Name of the existing DynamoDB table for Staging

Outputs:
  ApiURL:
    Description: API Gateway endpoint URL
    Value: !If
      - IsProduction
      - https://api.gogen.io/
      - https://staging-api.gogen.io/ 